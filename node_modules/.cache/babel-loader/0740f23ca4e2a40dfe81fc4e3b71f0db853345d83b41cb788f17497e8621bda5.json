{"ast":null,"code":"var _jsxFileName = \"/home/angelo/front-end-clc/src/components/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { supabase } from '../services/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  async function fetchTodos() {\n    let {\n      data,\n      error\n    } = await supabase.from('todos').select('*');\n    if (error) console.error(error);else setTodos(data);\n  }\n  async function deleteTodo(id) {\n    const {\n      error\n    } = await supabase.from('todos').delete().eq('id', id);\n    if (error) console.error(error);else setTodos(todos.filter(t => t.id !== id));\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: todos.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [t.task, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTodo(t.id),\n        children: \"Excluir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, t.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useEffect","useState","supabase","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","fetchTodos","data","error","from","select","console","deleteTodo","id","delete","eq","filter","t","children","map","task","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/angelo/front-end-clc/src/components/TodoList.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { supabase } from '../services/supabaseClient';\n\nexport default function TodoList() {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  async function fetchTodos() {\n    let { data, error } = await supabase.from('todos').select('*');\n    if (error) console.error(error);\n    else setTodos(data);\n  }\n  async function deleteTodo(id) {\n    const { error } = await supabase.from('todos').delete().eq('id', id);\n    if (error) console.error(error);\n    else setTodos(todos.filter(t => t.id !== id));\n  }\n  return (\n    <ul>\n      {todos.map(t => (\n        <li key={t.id}>\n          {t.task}\n          <button onClick={() => deleteTodo(t.id)}>Excluir</button>\n        </li>\n      ))}\n    </ul>\n  );\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtCD,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EACN,eAAeA,UAAUA,CAAA,EAAG;IAC1B,IAAI;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC;IAC9D,IAAIF,KAAK,EAAEG,OAAO,CAACH,KAAK,CAACA,KAAK,CAAC,CAAC,KAC3BH,QAAQ,CAACE,IAAI,CAAC;EACrB;EACA,eAAeK,UAAUA,CAACC,EAAE,EAAE;IAC5B,MAAM;MAAEL;IAAM,CAAC,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,OAAO,CAAC,CAACK,MAAM,CAAC,CAAC,CAACC,EAAE,CAAC,IAAI,EAAEF,EAAE,CAAC;IACpE,IAAIL,KAAK,EAAEG,OAAO,CAACH,KAAK,CAACA,KAAK,CAAC,CAAC,KAC3BH,QAAQ,CAACD,KAAK,CAACY,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC/C;EACA,oBACEZ,OAAA;IAAAiB,QAAA,EACGd,KAAK,CAACe,GAAG,CAACF,CAAC,iBACVhB,OAAA;MAAAiB,QAAA,GACGD,CAAC,CAACG,IAAI,eACPnB,OAAA;QAAQoB,OAAO,EAAEA,CAAA,KAAMT,UAAU,CAACK,CAAC,CAACJ,EAAE,CAAE;QAAAK,QAAA,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAFlDR,CAAC,CAACJ,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGT,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACtB,EAAA,CAzBuBD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}